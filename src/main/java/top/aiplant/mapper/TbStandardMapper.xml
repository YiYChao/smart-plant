<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.aiplant.dao.TbStandardMapper">
  <resultMap id="BaseResultMap" type="top.aiplant.entity.TbStandard">
    <result column="std_id" jdbcType="INTEGER" property="stdId" />
    <result column="plant_id" jdbcType="INTEGER" property="plantId" />
    <result column="std_name" jdbcType="VARCHAR" property="stdName" />
    <result column="std_desc" jdbcType="VARCHAR" property="stdDesc" />
    <result column="air_temperature" jdbcType="REAL" property="airTemperature" />
    <result column="air_humidity" jdbcType="REAL" property="airHumidity" />
    <result column="air_heat" jdbcType="REAL" property="airHeat" />
    <result column="air_light" jdbcType="REAL" property="airLight" />
    <result column="air_rain" jdbcType="INTEGER" property="airRain" />
    <result column="soil_humidity" jdbcType="REAL" property="soilHumidity" />
    <result column="water_depth" jdbcType="REAL" property="waterDepth" />
    <result column="std_time" jdbcType="TIMESTAMP" property="stdTime" />
    <result column="std_status" jdbcType="TINYINT" property="stdStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    std_id, plant_id, std_name, std_desc, air_temperature, air_humidity, air_heat, air_light, 
    air_rain, soil_humidity, water_depth, std_time, std_status
  </sql>
  <select id="selectByExample" parameterType="top.aiplant.entity.TbStandardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="top.aiplant.entity.TbStandardExample">
    delete from tb_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.aiplant.entity.TbStandard">
    insert into tb_standard (std_id, plant_id, std_name, 
      std_desc, air_temperature, air_humidity, 
      air_heat, air_light, air_rain, 
      soil_humidity, water_depth, std_time, 
      std_status)
    values (#{stdId,jdbcType=INTEGER}, #{plantId,jdbcType=INTEGER}, #{stdName,jdbcType=VARCHAR}, 
      #{stdDesc,jdbcType=VARCHAR}, #{airTemperature,jdbcType=REAL}, #{airHumidity,jdbcType=REAL}, 
      #{airHeat,jdbcType=REAL}, #{airLight,jdbcType=REAL}, #{airRain,jdbcType=INTEGER}, 
      #{soilHumidity,jdbcType=REAL}, #{waterDepth,jdbcType=REAL}, #{stdTime,jdbcType=TIMESTAMP}, 
      #{stdStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="top.aiplant.entity.TbStandard">
    insert into tb_standard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stdId != null">
        std_id,
      </if>
      <if test="plantId != null">
        plant_id,
      </if>
      <if test="stdName != null">
        std_name,
      </if>
      <if test="stdDesc != null">
        std_desc,
      </if>
      <if test="airTemperature != null">
        air_temperature,
      </if>
      <if test="airHumidity != null">
        air_humidity,
      </if>
      <if test="airHeat != null">
        air_heat,
      </if>
      <if test="airLight != null">
        air_light,
      </if>
      <if test="airRain != null">
        air_rain,
      </if>
      <if test="soilHumidity != null">
        soil_humidity,
      </if>
      <if test="waterDepth != null">
        water_depth,
      </if>
      <if test="stdTime != null">
        std_time,
      </if>
      <if test="stdStatus != null">
        std_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stdId != null">
        #{stdId,jdbcType=INTEGER},
      </if>
      <if test="plantId != null">
        #{plantId,jdbcType=INTEGER},
      </if>
      <if test="stdName != null">
        #{stdName,jdbcType=VARCHAR},
      </if>
      <if test="stdDesc != null">
        #{stdDesc,jdbcType=VARCHAR},
      </if>
      <if test="airTemperature != null">
        #{airTemperature,jdbcType=REAL},
      </if>
      <if test="airHumidity != null">
        #{airHumidity,jdbcType=REAL},
      </if>
      <if test="airHeat != null">
        #{airHeat,jdbcType=REAL},
      </if>
      <if test="airLight != null">
        #{airLight,jdbcType=REAL},
      </if>
      <if test="airRain != null">
        #{airRain,jdbcType=INTEGER},
      </if>
      <if test="soilHumidity != null">
        #{soilHumidity,jdbcType=REAL},
      </if>
      <if test="waterDepth != null">
        #{waterDepth,jdbcType=REAL},
      </if>
      <if test="stdTime != null">
        #{stdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stdStatus != null">
        #{stdStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.aiplant.entity.TbStandardExample" resultType="java.lang.Long">
    select count(*) from tb_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_standard
    <set>
      <if test="record.stdId != null">
        std_id = #{record.stdId,jdbcType=INTEGER},
      </if>
      <if test="record.plantId != null">
        plant_id = #{record.plantId,jdbcType=INTEGER},
      </if>
      <if test="record.stdName != null">
        std_name = #{record.stdName,jdbcType=VARCHAR},
      </if>
      <if test="record.stdDesc != null">
        std_desc = #{record.stdDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.airTemperature != null">
        air_temperature = #{record.airTemperature,jdbcType=REAL},
      </if>
      <if test="record.airHumidity != null">
        air_humidity = #{record.airHumidity,jdbcType=REAL},
      </if>
      <if test="record.airHeat != null">
        air_heat = #{record.airHeat,jdbcType=REAL},
      </if>
      <if test="record.airLight != null">
        air_light = #{record.airLight,jdbcType=REAL},
      </if>
      <if test="record.airRain != null">
        air_rain = #{record.airRain,jdbcType=INTEGER},
      </if>
      <if test="record.soilHumidity != null">
        soil_humidity = #{record.soilHumidity,jdbcType=REAL},
      </if>
      <if test="record.waterDepth != null">
        water_depth = #{record.waterDepth,jdbcType=REAL},
      </if>
      <if test="record.stdTime != null">
        std_time = #{record.stdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stdStatus != null">
        std_status = #{record.stdStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_standard
    set std_id = #{record.stdId,jdbcType=INTEGER},
      plant_id = #{record.plantId,jdbcType=INTEGER},
      std_name = #{record.stdName,jdbcType=VARCHAR},
      std_desc = #{record.stdDesc,jdbcType=VARCHAR},
      air_temperature = #{record.airTemperature,jdbcType=REAL},
      air_humidity = #{record.airHumidity,jdbcType=REAL},
      air_heat = #{record.airHeat,jdbcType=REAL},
      air_light = #{record.airLight,jdbcType=REAL},
      air_rain = #{record.airRain,jdbcType=INTEGER},
      soil_humidity = #{record.soilHumidity,jdbcType=REAL},
      water_depth = #{record.waterDepth,jdbcType=REAL},
      std_time = #{record.stdTime,jdbcType=TIMESTAMP},
      std_status = #{record.stdStatus,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
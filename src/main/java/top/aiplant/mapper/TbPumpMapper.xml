<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.aiplant.dao.TbPumpMapper">
	<resultMap id="BaseResultMap"
		type="top.aiplant.entity.TbPump">
		<result column="pump_id" jdbcType="INTEGER" property="pumpId" />
		<result column="sensor_id" jdbcType="INTEGER"
			property="sensorId" />
		<result column="pump_status" jdbcType="TINYINT"
			property="pumpStatus" />
		<result column="pump_time" jdbcType="TIMESTAMP"
			property="pumpTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		pump_id, sensor_id, pump_status, pump_time
	</sql>
	<select id="selectByExample"
		parameterType="top.aiplant.entity.TbPumpExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from tb_pump
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByExample"
		parameterType="top.aiplant.entity.TbPumpExample">
		delete from tb_pump
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="top.aiplant.entity.TbPump">
		insert into tb_pump (pump_id,
		sensor_id, pump_status,
		pump_time)
		values (#{pumpId,jdbcType=INTEGER},
		#{sensorId,jdbcType=INTEGER},
		#{pumpStatus,jdbcType=TINYINT},
		#{pumpTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="top.aiplant.entity.TbPump">
		insert into tb_pump
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="pumpId != null">
				pump_id,
			</if>
			<if test="sensorId != null">
				sensor_id,
			</if>
			<if test="pumpStatus != null">
				pump_status,
			</if>
			<if test="pumpTime != null">
				pump_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="pumpId != null">
				#{pumpId,jdbcType=INTEGER},
			</if>
			<if test="sensorId != null">
				#{sensorId,jdbcType=INTEGER},
			</if>
			<if test="pumpStatus != null">
				#{pumpStatus,jdbcType=TINYINT},
			</if>
			<if test="pumpTime != null">
				#{pumpTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="top.aiplant.entity.TbPumpExample"
		resultType="java.lang.Long">
		select count(*) from tb_pump
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tb_pump
		<set>
			<if test="record.pumpId != null">
				pump_id = #{record.pumpId,jdbcType=INTEGER},
			</if>
			<if test="record.sensorId != null">
				sensor_id = #{record.sensorId,jdbcType=INTEGER},
			</if>
			<if test="record.pumpStatus != null">
				pump_status = #{record.pumpStatus,jdbcType=TINYINT},
			</if>
			<if test="record.pumpTime != null">
				pump_time = #{record.pumpTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tb_pump
		set pump_id = #{record.pumpId,jdbcType=INTEGER},
		sensor_id = #{record.sensorId,jdbcType=INTEGER},
		pump_status =
		#{record.pumpStatus,jdbcType=TINYINT},
		pump_time =
		#{record.pumpTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<!-- 分页查询，根据传感器Id进行筛选 -->
	<select id="selectPagerBySensorId" resultType="top.aiplant.entity.TbPump">
		<bind name="key_offset" value="(page-1)*limit"></bind>
		SELECT pump_id,sensor_id,pump_status,pump_time FROM tb_pump WHERE sensor_id=#{sensorId} LIMIT #{key_offset},#{limit}
	</select>

	<select id="selectTotleCount" resultType="java.lang.Integer">
		SELECT COUNT(pump_id) FROM tb_pump WHERE sensor_id=#{sensorId}
	</select>

</mapper>